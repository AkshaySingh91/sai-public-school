{
  "academicYear": "24-25", (this is curr academic year of student if it is 23-24 means he paying prev year)
  "account": "cash", (fees are going to which acc of school)
  "amount": 121, 
  "date": "2025-04-24",
  "feeType": "AcademicFees",
  "paymentMode": "CASH",
  "receiptId": "FEE-XWXCZT-hdCx",
  "remark": "",
  "timestamp": "2025-04-24T15:24:34.851Z"
}
schoolSchema: 
{
  "code": "12",
  "academicYear": "24-25",
  "accounts": [{}]
  "class": ["Nursery", "JRKG", "1st"],
  "createdAt": "2025-04-14T15:24:46.945Z",
  "feeTypes": ["AcademicFee", "TuitionFee"],
  "location": "asdfasd",
  "logoURL": "",
  "paymentModes": ["CASH", "GPAY"],
  "schoolName": "asdfasdf",
  "studentsType": ["DSS", "DS", "DSR"]
}
UserSchema: 
{
  "createdAt": "2025-04-14T19:10:47.128Z",
  "email": "singhakshay8794@gmail.com",
  "name": "akshay singh",
  "phone": "09967559191",
  "role": "accountant",  
  "schoolCode": "12"
}
Employee: 
{
  "active": true,
  "aadharCardNo": "134412341234123123",
  "address": "D/103 Rashmi Regency 1 o",
  "class": "100",
  "contact": "9296756919",
  "department": "Computer",
  "designation": "Sakha baaap",
  "div": "Z", ....
}
i have to create a dashboard where i will show different statistic some of like: 
1. header :  
  A: we will show total no of students, whose Code = userData.SchoolCode & status active (means they dont left)
  B: total staff will get from Employee schema whose 
  C: total teacher from Employee schema whose type: "Teaching"
  D. total earnings: sum of all transacti.academion  for all student whose transaction academic = schoolcYear

2. on left show different card: 
    A. Todays Collection (eg; 12,300) it is sum of amount of transaction happend in past 24hrs
    B. Discounted amount: it is sum of allFee.busFeeDiscount + allFee.tuitionFeesDiscount of all student whose academicYear(eg; "24-25") equal to school.academicYear & student status = "active"
    C. Expected Collection (eg; 1,12,300): it is sum of allFee.tuitionFee.total + allFee.hostelFee + allFee.busFee + allFee.messFee for all student of academicYear = school.academicYear   
    D. Collected Fee Till date: sum of all transacti.academion  for all student whose transaction academic = schoolcYear
    E. pending Fee: Expected - Collected fee Till date
    F. lastYearBalanceFee: it is sum of allfee.lastYearBalanceFee + allFee.lastYearBusFee for all student
3. Card showing beautiful pie Charts showing total no of  girsl & Boys in school & there count , we can get it from schoolSchema whose Code = userData.schoolCode using student.Gender & only inc  student whose status = "active"
give complete & beautiful dashboard with best UI use as many line of code as you wont you can also include other analytic also based on provided data & schema & give complete code




{
  "busStop": "MADHA BUS NO. 5",
  "caste": "asdfasdf",
  "category": "open",
  "class": "5th",
  "allFee" :{
      "hostelFee": 0,
  "lastYearBalanceFee": 20,
  "lastYearDiscount": 16,
  "lastYearBusFee": 0,
  "lastYearBusFeeDiscount": 2,
  "messFee": 0,
  "tuitionFees": {
    "AdmissionFee": 3323,
    "tuitionFee": 0,
    "total": 0
  },
  "tuitionFeesDiscount": 13,
  "busFee": 0,
  "busFeeDiscount": 0
  }
  "createdAt": "14 May 2025 at 18:12:55 UTC+5:30",
  "div": "B",
  "divisions": ["A"],
  "dob": "1212-12-12",
  "fatherName": "sdf",
  "feeId": "FEE-L4DVZV",
  "fname": "qwe",
  "gender": "Male",
  "grNo": "",
  "id": "3mnZNv2SGTdd7n1nZcYM",
  "lname": "qwe",
  "mname": "qwe",
  "motherName": "eer",
  "nationality": "Indian",
  "penNo": "",
  "religion": "Hindu",
  "saralId": "",
  "schoolCode": "12",
  "status": "current",
  "transactions": [{
      "academicYear": "24-25",
      "account": "123456790 (Noida)",
      "amount": 2000,
      "date": "2025-05-17",
      "feeType": "SchoolFee",
      "historicalSnapshot": {
        "applicableDiscount": 0,
        "feeCategory": "School",
        "initialFee": 42100,
        "previousPayments": 0,
        "remainingAfter": 40100,
        "remainingBefore": 42100,
        "transactionDate": "2025-05-17T00:00:00.000Z"
      },
      "paymentMode": "CASH",
      "receiptId": 7,
      "remark": "remark",
      "status": "completed",
      "timestamp": "2025-05-17T20:25:06.578Z"
    }
  ],
  "busDetails": "busDetails": {
    "busId": "K2GsT919fDgMcEWCO0Yr",
    "destinationId": "7ikV9BPNGK3ZpJPz07v1",
    "discount": 0,
    "finalTransportFee": 14500,
    "busFee": 14500
  },
  "type": "DS"
}




{
  "sr no": 1,
  "feeId": 12,
  "Fname": "VIVAAN",
  "fatherName": "HARISH",
  "Sname": "ROTE",
  "DOB": "2018-08-09",
  "Sex": "M",
  "Saral": "",
  "Aadhar": "9152 8446 5352",
  "FatherMob": 8698111003,
  "MotherMob": "",
  "class": "1st",
  "Div": "A",
  "Address": "KASABA PETH MADHA",
  "MotherName": "ANKITA",
  "lastYearBalanceFee": 0,
  "tuitionFeesDiscount": 0,
  "lastYearBusFee": 0,
  "tuitionFee": 0,
  "tuitionPaidFee": 0,
  "tuitionPendingFee": 0,
  "busFee": 0,
  "busFeeDiscount": 0,
  "busFeePaid": 0,
  "busFeePending": 0,
  "Total Pending": 0,
  "Ayear": "24-25",
  "busStop": "NO BUS",
  "busNoPlate": "",
  "status": "Current", 
  "email": "",
  "caste": "",
  "subCaste": "",
  "nationality": "",
  "category": "",
  "religion": ""
}
i have excel sheet , for visulation i give you json some cell my be empty. 
suppose we need to add 500+ student that are on prev school mangement website but we shift to other we have to add excel upload feature. see what i want : 
1. from excel data that can easly added in student data will assign as it is like Fname, Sname, DOB, fatherName, DOB etc below i have given excat schema of student you can match field from excel & schema to add it.
2. taking about student.allFee from excel  lastYearBalanceFee, lastYearBusFee, tuitionFeesDiscount, busFeeDiscount assign to student.allFee. for tuitionPaidFee(excel) we need to add one transaction in student.transactions, transactions detail will be
{
      "academicYear": "24-25",//school.academicYear
      "account": "123456790 (Noida)"// school.accounts[0]
      "amount": 2000, //tuitionPaidFee (from excel)
      "date": "2025-05-17",// today
      "feeType": "SchoolFee", 
      "historicalSnapshot": {
        "applicableDiscount": 0, //tuitionFeesDiscount(from excel)
        "feeCategory": "School",
        "initialFee": 42100,//tuitionFee(from excel)
        "previousPayments": 0, 
        "remainingBefore": 42100,//tuitionPaidFee (from excel)
        "remainingAfter": 40100, (remainingBefore - amount)
        "transactionDate": "2025-05-17T00:00:00.000Z" //today
      },
      "paymentMode": "CASH",
      "receiptId": 7,
      "remark": "remark",
      "status": "completed",
      "timestamp": "2025-05-17T20:25:06.578Z"
    }
this is because how much student has paid tuitionFees, hostelFee, busFee etc we calculate using sum of transaction but because student is adding from external source we need to add transaction(tuitionFee, busFee) for each student. similar to this we need to create one transaction for busFee we can use busFeePaid(excel) , busFeeDiscount(excel) to create transaction. we dont have to to anything with  tuitionPendingFee(excel), busFeePending(excel) because we calculate pending using student.allFee[feeType] - sum of transaction of type feeType.
3. messFee, hostelFee, lastYearDiscount, lastYearBusFeeDiscount will default 0. this is how all student data will be added from excel sheet. first we will directly add those detail which are common like category, name, busStop, etc after that we will create 2 transaction (tuitionFee, busFee) & for amount we will use "tuitionPaidFee", "busFeePaid" from excel as i tell about each field of transaction before. below are student detail schema which you can match with excel sheet to add student detail. give a complete code to add student from excel.
{
  "busStop": "MADHA BUS NO. 5",
  "caste": "asdfasdf",
  "category": "open",
  "class": "5th",
  "allFee" :{
      "hostelFee": 0,
  "lastYearBalanceFee": 20,
  "lastYearDiscount": 16,
  "lastYearBusFee": 0,
  "lastYearBusFeeDiscount": 2,
  "messFee": 0,
  "tuitionFees": {
    "AdmissionFee": 3323,
    "tuitionFee": 0,
    "total": 0
  },
  "tuitionFeesDiscount": 13,
  "busFee": 0,
  "busFeeDiscount": 0
  }
  "createdAt": "14 May 2025 at 18:12:55 UTC+5:30",
  "div": "B",
  "dob": "1212-12-12",
  "fatherName": "sdf",
  "feeId": "FEE-L4DVZV",
  "fname": "qwe",
  "gender": "Male",
  "grNo": "",
  "id": "3mnZNv2SGTdd7n1nZcYM",
  "lname": "qwe",
  "mname": "qwe",
  "motherName": "eer",
  "nationality": "Indian",
  "penNo": "",
  "religion": "Hindu",
  "saralId": "",
  "schoolCode": "12",
  "status": "current",
  "busNoPlate": "MH 25 T 0247",
  "transactions": [{
      "academicYear": "24-25",
      "account": "123456790 (Noida)",
      "amount": 2000,
      "date": "2025-05-17",
      "feeType": "SchoolFee",
      "historicalSnapshot": {
        "applicableDiscount": 0,
        "feeCategory": "School",
        "initialFee": 42100,
        "previousPayments": 0,
        "remainingAfter": 40100,
        "remainingBefore": 42100,
        "transactionDate": "2025-05-17T00:00:00.000Z"
      },
      "paymentMode": "CASH",
      "receiptId": 7,
      "remark": "remark",
      "status": "completed",
      "timestamp": "2025-05-17T20:25:06.578Z"
    }
  ],
  "busDetails": "busDetails": {
    "busId": "K2GsT919fDgMcEWCO0Yr",
    "destinationId": "7ikV9BPNGK3ZpJPz07v1",
    "discount": 0,
    "finalTransportFee": 14500,
    "busFee": 14500
  },
  "type": "DS"
}


///////
this is required data that are available 
{
  "sr no": 1,
  "Fname": "VIVAAN",
  "FatherName": "HARISH",
  "Sname": "ROTE",
  "DOB": "08-08-2018",
  "Sex": "M",
  "Saral": "",
  "Aadhar": "9152 8446 5352",
  "FatherMob": 8700000000,
  "MotherMob": "",
  "class": "1st",
  "Div": "A",
  "Address": "KASABA PETH MADHA",
  "MotherName": "ANKITA",
  "lastYearBalanceFee": 0,
  "tuitionFeesDiscount": 0,
  "lastYearBusFee": 0,
  "tuitionFee": 0,
  "tuitionPaidFee": 0,
  "tuitionPendingFee": 0,
  "busFee": 0,
  "busFeePaid": 0,
  "busDiscount": 0,
  "busFeePending": 0,
  "Total Pending": 0,
  "Ayear": "24-25",
  "busStop": "NO BUS",
  "BUS": "",
  "STATUS": "Current",
  "Total STOCK Paid AMOUNT": 3050,
  "Email": "",
  "caste": "",
  "SubCaste": "",
  "Nationality": "",
  "category": "",
  "Religion": "",
  "FeeID": 325,
  "Type": "DSS"
}
CONTEXT : we have have to create a component where we can add existing student (that are on different school management system) but school are changingto new website , that we have to add existing student data. 

1. from first data we will create a input field, all that data like name, div,class,type,FeeId are assign my maping with student schema & changin its format based on field available in studentschema

2. taking about student.allFee from data  lastYearBalanceFee, lastYearBusFee, tuitionFeesDiscount, busFeeDiscount assign to student.allFee, but for tuitionPaidFee we need to add one transaction in student.transactions, transactions detail will be
{
      "academicYear": "24-25",//school.academicYear
      "account": "123456790 (Noida)"// school.accounts[0]
      "amount": 2000, //tuitionPaidFee (from input field)
      "date": "2025-05-17",// today
      "feeType": "SchoolFee", 
      "historicalSnapshot": {
        "applicableDiscount": 0, //tuitionFeesDiscount(from excel)
        "feeCategory": "School",
        "initialFee": 42100,//tuitionFee(from input field)
        "previousPayments": 0, 
        "remainingBefore": 42100,//tuitionPaidFee(from input field)
        "remainingAfter": 40100, (remainingBefore - amount)
        "transactionDate": "2025-05-17T00:00:00.000Z" //today
      },
      "paymentMode": "CASH",
      "receiptId": 7,
      "remark": "remark",
      "status": "completed",
      "timestamp": "2025-05-17T20:25:06.578Z"
    }
this is because how much student has paid tuitionFees, hostelFee, busFee etc we calculate using sum of transaction but because student is adding from external source we need to add transaction(tuitionFee, busFee) for each student. similar to this we need to create one transaction for busFee we can use busFeePaid(excel) , busFeeDiscount(excel) to create transaction. we dont have to to anything with  tuitionPendingFee(excel), busFeePending(excel) because we calculate pending using student.allFee[feeType] - sum of transaction of type feeType.
3. messFee, hostelFee, lastYearDiscount, lastYearBusFeeDiscount will default 0. this is how all student data will be added from input field (first object that i provide). first we will directly add those detail which are common like category, name, busStop, etc after that we will create 2 transaction (tuitionFee, busFee) & for amount we will use "tuitionPaidFee", "busFeePaid" from input as i tell about each field of transaction before. below are student detail schema which you can match with excel sheet to add student detail. give a complete code to add student from input.
this is detail schema of student : 
{
  "busStop": "MADHA BUS NO. 5",
  "caste": "asdfasdf",
  "category": "open",
  "class": "5th",
  "allFee" :{
      "hostelFee": 0,
  "lastYearBalanceFee": 20,
  "lastYearDiscount": 16,
  "lastYearBusFee": 0,
  "lastYearBusFeeDiscount": 2,
  "messFee": 0,
  "tuitionFees": {
    "AdmissionFee": 3323,
    "tuitionFee": 0,
    "total": 0
  },
  "tuitionFeesDiscount": 13,
  "busFee": 0,
  "busFeeDiscount": 0
  }
  "createdAt": "14 May 2025 at 18:12:55 UTC+5:30",
  "div": "B",
  "dob": "1212-12-12",
  "fatherName": "sdf",
  "feeId": "FEE-L4DVZV",
  "fname": "qwe",
  "gender": "Male",
  "grNo": "",
  "id": "3mnZNv2SGTdd7n1nZcYM",
  "lname": "qwe",
  "mname": "qwe",
  "motherName": "eer",
  "nationality": "Indian",
  "penNo": "",
  "religion": "Hindu",
  "saralId": "",
  "schoolCode": "12",
  "status": "current",
  "busNoPlate": "MH 25 T 0247",
  "transactions": [{
      "academicYear": "24-25",
      "account": "123456790 (Noida)",
      "amount": 2000,
      "date": "2025-05-17",
      "feeType": "SchoolFee",
      "historicalSnapshot": {
        "applicableDiscount": 0,
        "feeCategory": "School",
        "initialFee": 42100,
        "previousPayments": 0,
        "remainingAfter": 40100,
        "remainingBefore": 42100,
        "transactionDate": "2025-05-17T00:00:00.000Z"
      },
      "paymentMode": "CASH",
      "receiptId": 7,
      "remark": "remark",
      "status": "completed",
      "timestamp": "2025-05-17T20:25:06.578Z"
    }
  ],
  "busDetails": "busDetails": {
    "busId": "K2GsT919fDgMcEWCO0Yr",
    "destinationId": "7ikV9BPNGK3ZpJPz07v1",
    "discount": 0,
    "finalTransportFee": 14500,
    "busFee": 14500
  },
  "type": "DS"
}

 
structure = [
    {
    year: "24-25",
    classes: [{
        name: "Nursery",
        studentType: [{
            name: "DS",
            feeStructure : {
                AdmissionFee: 1000
                TuitionFee: 12000
            }},{
            name: "DSS",
            feeStructure : {
                AdmissionFee: 1000
                TuitionFee: 6000
            }},
            {
            name: "DSR",
            feeStructure : {
                AdmissionFee: 1000
                TuitionFee: 0
            }}
        ]},
        {
            name: "JRKG", ...
        }
    ]},
    {
    year: "24-25",
    classes: [{.....}]
    }
]
see how i want : 
structure = [
    {
    year: "24-25",
    classes: [{
        name: "Nursery",
        studentType: [{
            englishMedium: true,
            name: "DS",
            feeStructure : {
                AdmissionFee: 1000
                TuitionFee: 12000
            }},{
            name: "DSS",
            englishMedium: true,
            feeStructure : {
                AdmissionFee: 1000
                TuitionFee: 6000
            }},
            {
            name: "DS",
            englishMedium: false,
            feeStructure : {
                AdmissionFee: 1000
                TuitionFee: 0
            }}
            {
            name: "DSS",
            englishMedium: false,
            feeStructure : {
                AdmissionFee: 1000
                TuitionFee: 0
            }}
            {
            name: "DSR",
            englishMedium: false,
            feeStructure : {
                AdmissionFee: 1000
                TuitionFee: 0
            }}
            {
            name: "DSR",
            englishMedium: true,
            feeStructure : {
                AdmissionFee: 1000
                TuitionFee: 0
            }}
        ]},
        {
            name: "JRKG", ...
        }
    ]},
    {
    year: "24-25",
    classes: [{.....}]
    }
]